buildscript {
    dependencies {
        classpath('io.swagger:swagger-codegen:2.2.2')
    }
}



plugins {
    id 'java'
}

group 'org.shopping.front.web'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    implementation "org.springframework.boot:spring-boot-starter:$spring_boot"
    implementation "org.springframework.boot:spring-boot-starter-web:$spring_boot"
    implementation "org.springframework.boot:spring-boot-starter-data-elasticsearch:$spring_boot"

    //Swagger dependencies
    implementation "io.springfox:springfox-swagger2:$springfox"
    implementation "io.springfox:springfox-boot-starter:$springfox"
    implementation "io.springfox:springfox-swagger-ui:$springfox"

    implementation "com.squareup.okhttp:okhttp:2.7.2"
    implementation "com.squareup.okhttp:logging-interceptor:2.7.2"
    implementation "com.google.code.gson:gson:2.7"
    implementation "joda-time:joda-time:2.10.9"

    compileOnly "org.projectlombok:lombok:$lombok"
    annotationProcessor "org.projectlombok:lombok:$lombok"

    testImplementation "org.springframework.boot:spring-boot-starter-test:$spring_boot"
}



//generate from api
import io.swagger.codegen.config.CodegenConfigurator
import io.swagger.codegen.DefaultGenerator

def swaggerSourceFile = 'src/main/resources/invertory-service.json'
def swaggerTargetFolder = 'src/generated/java'


clean.doFirst {
    delete("${projectDir}/$swaggerTargetFolder")
}

task generateApi {
    inputs.file("$projectDir/$swaggerSourceFile")
    outputs.dir("$projectDir/$swaggerTargetFolder")
    doLast {
        def config = new CodegenConfigurator()
        config.setInputSpec("file:///$projectDir/$swaggerSourceFile")
        config.setOutputDir("$projectDir")
        config.setLang('java')
        config.setAdditionalProperties([
                'interfaceOnly' : 'true',
                'apiPackage'    : 'com.invertory.api',
                'modelPackage'  : 'com.invertory.model',
                'sourceFolder'  : swaggerTargetFolder
        ])
        new DefaultGenerator().opts(config.toClientOptInput()).generate()
    }
}


configurations {
    generatedCompile
}

dependencies {
    generatedCompile "io.springfox:springfox-swagger2:$springfox"
    generatedCompile  "io.springfox:springfox-swagger-ui:$springfox"
    generatedCompile "com.squareup.okhttp:okhttp:2.7.2"
    generatedCompile "com.squareup.okhttp:logging-interceptor:2.7.2"
    generatedCompile "com.google.code.gson:gson:2.7"
    generatedCompile "joda-time:joda-time:2.10.9"

}

sourceSets {
    generated {
        compileClasspath = configurations.generatedCompile
    }
    main {
        compileClasspath += generated.output
        runtimeClasspath += generated.output
    }
    test {
        compileClasspath += generated.output
        runtimeClasspath += generated.output
    }
}

compileGeneratedJava.dependsOn generateApi
classes.dependsOn generatedClasses
compileJava.dependsOn compileGeneratedJava

test {
    useJUnitPlatform()
}
